# Generated by Django 5.2.5 on 2025-08-27 16:52

import json
import os
from django.db import migrations, models
from django.core.exceptions import ValidationError

# Historical NISTIR schema data
HISTORICAL_NISTIR_SCHEMA = {
    'A': {
        'A10': {
            'A1010': {'A1011': {}, 'A1012': {}, 'A1013': {}},
            'A1020': {
                'A1021': {},
                'A1022': {},
                'A1023': {},
                'A1024': {},
                'A1025': {},
                'A1026': {},
                'A1027': {},
                'A1029': {},
            },
            'A1030': {
                'A1031': {},
                'A1032': {},
                'A1033': {},
                'A1034': {},
                'A1035': {},
            },
        },
        'A20': {
            'A2010': {'A2011': {}, 'A2012': {}, 'A2013': {}},
            'A2020': {'A2021': {}, 'A2022': {}, 'A2023': {}, 'A2024': {}},
        },
    },
    'B': {
        'B10': {
            'B1010': {
                'B1011': {},
                'B1012': {},
                'B1013': {},
                'B1014': {},
                'B1015': {},
                'B1016': {},
                'B1019': {},
            },
            'B1020': {'B1021': {}, 'B1022': {}, 'B1023': {}, 'B1029': {}},
        },
        'B20': {
            'B2010': {
                'B2011': {},
                'B2012': {},
                'B2013': {},
                'B2014': {},
                'B2015': {},
                'B2016': {},
            },
            'B2020': {'B2021': {}, 'B2022': {}, 'B2023': {}},
            'B2030': {
                'B2031': {},
                'B2032': {},
                'B2033': {},
                'B2034': {},
                'B2039': {},
            },
        },
        'B30': {
            'B3010': {
                'B3011': {},
                'B3012': {},
                'B3013': {},
                'B3014': {},
                'B3015': {},
                'B3016': {},
            },
            'B3020': {'B3021': {}, 'B3022': {}, 'B3023': {}},
        },
    },
    'C': {
        'C10': {
            'C1010': {
                'C1011': {},
                'C1012': {},
                'C1013': {},
                'C1014': {},
                'C1015': {},
                'C1016': {},
                'C1017': {},
            },
            'C1020': {
                'C1021': {},
                'C1022': {},
                'C1023': {},
                'C1024': {},
                'C1025': {},
                'C1026': {},
                'C1027': {},
            },
            'C1030': {
                'C1031': {},
                'C1032': {},
                'C1033': {},
                'C1034': {},
                'C1035': {},
                'C1036': {},
                'C1037': {},
            },
        },
        'C20': {
            'C2010': {'C2011': {}, 'C2012': {}, 'C2013': {}, 'C2014': {}},
            'C2020': {'C2021': {}, 'C2022': {}, 'C2023': {}},
        },
        'C30': {
            'C3010': {'C3011': {}, 'C3012': {}, 'C3013': {}},
            'C3020': {
                'C3021': {},
                'C3022': {},
                'C3023': {},
                'C3024': {},
                'C3025': {},
                'C3026': {},
                'C3027': {},
            },
            'C3030': {'C3031': {}, 'C3032': {}, 'C3033': {}},
        },
    },
    'D': {
        'D10': {
            'D1010': {'D1011': {}, 'D1012': {}, 'D1013': {}},
            'D1020': {'D1021': {}, 'D1022': {}},
            'D1090': {
                'D1091': {},
                'D1092': {},
                'D1093': {},
                'D1094': {},
                'D1095': {},
                'D1096': {},
                'D1097': {},
                'D1098': {},
            },
        },
        'D20': {
            'D2010': {
                'D2011': {},
                'D2012': {},
                'D2013': {},
                'D2014': {},
                'D2015': {},
                'D2016': {},
                'D2017': {},
                'D2018': {},
                'D2019': {},
            },
            'D2020': {'D2021': {}, 'D2022': {}, 'D2023': {}},
            'D2030': {
                'D2031': {},
                'D2032': {},
                'D2033': {},
                'D2034': {},
                'D2035': {},
            },
            'D2040': {'D2041': {}, 'D2042': {}, 'D2043': {}, 'D2044': {}},
            'D2090': {
                'D2091': {},
                'D2092': {},
                'D2093': {},
                'D2094': {},
                'D2095': {},
                'D2099': {},
            },
        },
        'D30': {
            'D3010': {
                'D3011': {},
                'D3012': {},
                'D3013': {},
                'D3014': {},
                'D3015': {},
                'D3016': {},
                'D3017': {},
            },
            'D3020': {'D3021': {}, 'D3022': {}, 'D3023': {}, 'D3024': {}},
            'D3030': {'D3031': {}, 'D3032': {}},
            'D3040': {
                'D3041': {},
                'D3042': {},
                'D3043': {},
                'D3044': {},
                'D3045': {},
                'D3046': {},
                'D3047': {},
            },
            'D3050': {'D3051': {}, 'D3052': {}},
            'D3060': {
                'D3061': {},
                'D3062': {},
                'D3063': {},
                'D3064': {},
                'D3065': {},
                'D3066': {},
                'D3067': {},
                'D3068': {},
                'D3069': {},
            },
            'D3070': {'D3071': {}, 'D3072': {}, 'D3073': {}, 'D3079': {}},
            'D3090': {
                'D3091': {},
                'D3092': {},
                'D3093': {},
                'D3094': {},
                'D3095': {},
                'D3096': {},
                'D3097': {},
            },
        },
        'D40': {
            'D4010': {'D4011': {}, 'D4012': {}, 'D4013': {}},
            'D4020': {'D4021': {}, 'D4022': {}, 'D4023': {}, 'D4024': {}},
            'D4030': {'D4031': {}, 'D4032': {}},
            'D4090': {
                'D4091': {},
                'D4092': {},
                'D4093': {},
                'D4094': {},
                'D4095': {},
            },
        },
        'D50': {
            'D5010': {'D5011': {}, 'D5012': {}},
            'D5020': {'D5021': {}, 'D5022': {}},
            'D5030': {
                'D5031': {},
                'D5032': {},
                'D5033': {},
                'D5034': {},
                'D5035': {},
                'D5036': {},
                'D5037': {},
                'D5038': {},
                'D5039': {},
            },
            'D5090': {
                'D5091': {},
                'D5092': {},
                'D5093': {},
                'D5094': {},
                'D5095': {},
            },
        },
    },
    'E': {
        'E10': {
            'E1010': {
                'E1011': {},
                'E1012': {},
                'E1013': {},
                'E1014': {},
                'E1015': {},
                'E1016': {},
                'E1017': {},
                'E1018': {},
            },
            'E1020': {
                'E1021': {},
                'E1022': {},
                'E1023': {},
                'E1024': {},
                'E1025': {},
                'E1026': {},
                'E1027': {},
                'E1028': {},
                'E1029': {},
            },
            'E1030': {'E1031': {}, 'E1032': {}, 'E1033': {}, 'E1039': {}},
            'E1090': {
                'E1091': {},
                'E1092': {},
                'E1093': {},
                'E1094': {},
                'E1095': {},
                'E1096': {},
                'E1099': {},
            },
        },
        'E20': {
            'E2010': {
                'E2011': {},
                'E2012': {},
                'E2013': {},
                'E2014': {},
                'E2015': {},
                'E2016': {},
            },
            'E2020': {'E2021': {}, 'E2022': {}, 'E2023': {}, 'E2024': {}},
        },
    },
    'F': {
        'F10': {
            'F1010': {'F1011': {}, 'F1012': {}, 'F1013': {}},
            'F1020': {'F1021': {}, 'F1022': {}, 'F1023': {}},
            'F1030': {
                'F1031': {},
                'F1032': {},
                'F1033': {},
                'F1034': {},
                'F1039': {},
            },
            'F1040': {
                'F1041': {},
                'F1042': {},
                'F1043': {},
                'F1044': {},
                'F1045': {},
                'F1049': {},
            },
            'F1050': {'F1051': {}, 'F1052': {}, 'F1059': {}},
        },
        'F20': {
            'F2010': {'F2011': {}, 'F2012': {}},
            'F2020': {'F2021': {}, 'F2022': {}},
        },
    },
    'G': {
        'G10': {'G1010': {}, 'G1020': {}, 'G1030': {}, 'G1040': {}},
        'G20': {'G2010': {}, 'G2020': {}, 'G2030': {}, 'G2040': {}, 'G2050': {}},
        'G30': {
            'G3010': {},
            'G3020': {},
            'G3030': {},
            'G3040': {},
            'G3050': {},
            'G3060': {},
            'G3090': {},
        },
        'G40': {'G4010': {}, 'G4020': {}, 'G4030': {}, 'G4090': {}},
        'G90': {'G9010': {}, 'G9090': {}},
    },
}

# Historical helper functions
_nistir_schema = None


def _load_nistir_schema():
    """
    Load the NISTIR schema from embedded historical data. Cache it globally for efficiency.
    Returns:
        dict: The NISTIR schema dictionary
    """
    global _nistir_schema
    if _nistir_schema is None:
        _nistir_schema = HISTORICAL_NISTIR_SCHEMA
    return _nistir_schema


def validate_nistir_component_id(component_id):
    """
    Validate a NISTIR component ID against the hierarchical schema.
    The validation follows this specific hierarchical logic:
    1. The first character must exist as a top-level key
    2. The first three characters must exist as a key within the first level's object
    3. The first four characters plus a "0" must exist as a key within the second level's object
    4. The first five characters must exist as a key within the third level's object
    Args:
        component_id (str): The component ID to validate
    Raises:
        ValidationError: If the component ID is invalid at any hierarchical level
    """
    if not isinstance(component_id, str):
        raise ValidationError('Component ID must be a string')
    if len(component_id) < 5:
        raise ValidationError(
            f'Component ID "{component_id}" must be at least 5 characters long'
        )
    # Load the schema
    schema = _load_nistir_schema()
    # Step 1: Check first character (top-level key)
    first_char = component_id[0]
    if first_char not in schema:
        raise ValidationError(
            f'Invalid component ID "{component_id}": '
            f'first character "{first_char}" not found in NISTIR taxonomy'
        )
    # Step 2: Check first three characters (second level)
    first_three = component_id[:3]
    if first_three not in schema[first_char]:
        raise ValidationError(
            f'Invalid component ID "{component_id}": '
            f'group element "{first_three}" not found in NISTIR taxonomy'
        )
    # Step 3: Check first four characters plus "0" (third level)
    first_four_plus_zero = component_id[:4] + '0'
    if first_four_plus_zero not in schema[first_char][first_three]:
        raise ValidationError(
            f'Invalid component ID "{component_id}": '
            f'individual element "{first_four_plus_zero}" not found in NISTIR taxonomy'
        )
    # Step 4: Check first five characters (fourth level)
    first_five = component_id[:5]
    if first_five not in schema[first_char][first_three][first_four_plus_zero]:
        raise ValidationError(
            f'Invalid component ID "{component_id}": '
            f'sub-element "{first_five}" not found in NISTIR taxonomy'
        )


def validate_existing_component_ids(apps, schema_editor):
    """
    Validate all existing Component records against the NISTIR schema.

    This function runs before any schema changes to ensure all existing
    component IDs are valid.
    """
    Component = apps.get_model('ned_app', 'Component')

    for component in Component.objects.all():
        try:
            validate_nistir_component_id(component.id)
        except ValidationError as e:
            raise ValidationError(
                f'Migration failed: Component with ID "{component.id}" '
                f'is invalid according to NISTIR schema: {e}'
            )


def reverse_validate_existing_component_ids(apps, schema_editor):
    """
    Reverse function for the validation step - no action needed.
    """
    pass


class Migration(migrations.Migration):
    dependencies = [
        ('ned_app', '0006_alter_reference_csl_data_alter_reference_title'),
    ]

    operations = [
        migrations.RunPython(
            validate_existing_component_ids,
            reverse_validate_existing_component_ids,
        ),
        migrations.RemoveField(
            model_name='component',
            name='nistir_subelement',
        ),
        migrations.AlterField(
            model_name='component',
            name='id',
            field=models.CharField(
                max_length=10,
                primary_key=True,
                serialize=False,
                validators=[validate_nistir_component_id],
                verbose_name='id',
            ),
        ),
    ]
